
__problem_title__ = "Highly divisible triangular number"
__problem_url___ = "https://projecteuler.net/problem=12"
__problem_description__ = "The sequence of triangle numbers is generated by adding the natural " \
                          "numbers. So the 7 triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 " \
                          "= 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, " \
                          "55, ... Let us list the factors of the first seven triangle numbers: " \
                          "We can see that 28 is the first triangle number to have over five " \
                          "divisors. What is the value of the first triangle number to have over " \
                          "five hundred divisors?"

import timeit


class Solution():

    @staticmethod
    def solution1():
        pass

    @staticmethod
    def time_solutions():
        setup = 'from __main__ import Solution'
        print('Solution 1:', timeit.timeit('Solution.solution1()', setup=setup, number=1))


if __name__ == '__main__':
    s = Solution()
    print(s.solution1())
    s.time_solutions()

